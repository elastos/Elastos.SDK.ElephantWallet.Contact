apply plugin: 'com.android.library'

apply from: "$rootProject.projectDir/gradle/android.gradle"
apply from: "$rootProject.projectDir/gradle/native.gradle"

android {
    defaultConfig {
        externalNativeBuild {
            cmake {
                arguments "-DCROSSPL_CMAKEFILE='${buildDir}/tmp/CrossPL/crosspl.cmake'"
                arguments "-DCFG_DEPENDS_DIR=${rootProject.rootDir}/../build/sysroot/Android/"

                // TODO: not perfect
                arguments "-DCROSSPL_LIB_HEADERDIR=" + project(':crosspl:lib').projectDir + "/src/main/cpp"
                arguments "-DCROSSPL_LIB_LIBPATHS=" + project(':crosspl:lib').buildDir + "/intermediates/intermediate-jars/debug/jni/"
            }
        }
    }
}

dependencies {
    compileOnly(project(":crosspl:anno"))
    kapt(project(":crosspl:anno"))
    api(project(":crosspl:lib"))

    implementation 'com.android.support:support-annotations:25.3.1'
    implementation 'com.google.code.gson:gson:2.8.5'
}

//project.ext {
//    extractNativeRunBefore = [ 'externalNativeBuild${buildType}' ]
//    extractNativeRunAfter = [ ':crosspl:lib:bundle${buildType}' ]
//    extractNativeMap = [
//            'crosspl-lib': project(':crosspl:lib').buildDir.absolutePath + '/outputs/aar/v8-engine-${buildTypeLowerCase}.aar',
//    ]
//}
//apply from: "$rootProject.ext.gradleStoreDir/task-extract-native.gradle"
